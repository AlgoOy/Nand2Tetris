// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=dmuxa, b=dmuxb, c=dmuxc, d=dmuxd, e=dmuxe, f=dmuxf, g=dmuxg, h=dmuxh);
    RAM64(in=in, load=dmuxa, address=address[0..5], out=ram64a);
    RAM64(in=in, load=dmuxb, address=address[0..5], out=ram64b);
    RAM64(in=in, load=dmuxc, address=address[0..5], out=ram64c);
    RAM64(in=in, load=dmuxd, address=address[0..5], out=ram64d);
    RAM64(in=in, load=dmuxe, address=address[0..5], out=ram64e);
    RAM64(in=in, load=dmuxf, address=address[0..5], out=ram64f);
    RAM64(in=in, load=dmuxg, address=address[0..5], out=ram64g);
    RAM64(in=in, load=dmuxh, address=address[0..5], out=ram64h);
    Mux8Way16(a=ram64a, b=ram64b, c=ram64c, d=ram64d, e=ram64e, f=ram64f, g=ram64g, h=ram64h, sel=address[6..8], out=out);
}